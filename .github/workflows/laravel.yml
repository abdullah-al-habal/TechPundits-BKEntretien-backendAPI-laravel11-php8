name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: password
      run: vendor/bin/phpunit
    - name: Execute static analysis via PHPStan
      run: vendor/bin/phpstan analyse
    - name: Execute Pest tests
      run: vendor/bin/pest

  deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Check if secrets are set
      run: |
        if [ -z "${{ secrets.SERVER_SSH_KEY }}" ] || [ -z "${{ secrets.HOSTNAME }}" ] || [ -z "${{ secrets.USER_NAME }}" ]; then
          echo "One or more required secrets are not set. Please check your GitHub secrets."
          exit 1
        fi
    - name: Deploy to production
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        HOSTNAME: ${{ secrets.HOSTNAME }}
        USER_NAME: ${{ secrets.USER_NAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          cd /path/to/inactive/environment &&
          git pull origin main &&
          composer install --no-dev --optimize-autoloader &&
          php artisan migrate --force &&
          php artisan config:cache &&
          php artisan route:cache &&
          php artisan view:cache &&
          /path/to/switch-environment.sh
        '
